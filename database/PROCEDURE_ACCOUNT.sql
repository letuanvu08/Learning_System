USE LEARNING_TEACHING_ACCOUNT;

DROP PROCEDURE IF EXISTS GET_ACCOUNT_ID;
DELIMITER \\
CREATE PROCEDURE GET_ACCOUNT_ID(id char(9))
BEGIN
    select USERID,USERNAME,AES_DECRYPT(PASSWORD,'database') as PASSWORD from Account where Account.USERID=id;

END\\
DELIMITER ;

DROP PROCEDURE IF EXISTS GET_ACCOUNT_NAME;
DELIMITER \\
CREATE PROCEDURE GET_ACCOUNT_NAME(_USERNAME nvarchar(100))
BEGIN
    select USERID,USERNAME,DES_DECRYPT(PASSWORD,'database')as PASSWORD  from Account where Account.USERNAME=_USERNAME;
END\\
DELIMITER ;

DROP PROCEDURE IF EXISTS CHANGE_PASSWORD_ACCOUNT;
DELIMITER \\
CREATE PROCEDURE CHANGE_PASSWORD_ACCOUNT(_USERNAME varchar(100),OLD_PASSWORD VARCHAR(100), NEWPASSWORD VARCHAR(100))
BEGIN

    IF EXISTS(SELECT *
              FROM Account
              WHERE Account.USERNAME=_USERNAME)
    THEN
        IF EXISTS(SELECT *
              FROM Account
              WHERE Account.USERNAME=_USERNAME and DES_ENCRYPT(OLD_PASSWORD,'database')=PASSWORD)
        Then
        UPDATE Account
        SET PASSWORD=DES_ENCRYPT(NEWPASSWORD,'database')
        WHERE (Account.USERNAME=_USERNAME);
        Else
             SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Incorrect Password!';
        end if;
        else
 SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Account is not Available!';
    END IF;
END\\


select *
from Account;